// File Generated by Assets/BuildShader.py - source: [BasicVfxFS.d.hlsl : UV2,SCROLL_UV2]
Texture2D uTexDiffuse1 : register(t0);
SamplerState uTex1Sampler : register(s0);
Texture2D uTexDiffuse2 : register(t1);
SamplerState uTex2Sampler : register(s1);
struct PS_INPUT
{
	float4 pos : SV_POSITION;
	float4 color : COLOR0;
	float2 tex0 : TEXCOORD0;
	float2 tex1 : TEXCOORD1;
	float4 uvScale: UVSCALE0;
	float4 uvScale1: UVSCALE1;
};
cbuffer cbPerFrame
{
	float4 uColor1;
	float4 uColor2;
	float4 uColorIntensity;
	float4 uTime;
};
float4 main(PS_INPUT input) : SV_TARGET
{
	float2 tex0 = input.tex0 * input.uvScale.xy + input.uvScale.zw;
	float2 tex1 = input.tex1 * input.uvScale1.xy + input.uvScale1.zw;
	float2 uvOffset = float2(-uTime.y, 0.0) / 4.0;
	float4 color1 = uTexDiffuse1.Sample(uTex1Sampler, tex0);
	float4 color2 = uTexDiffuse2.Sample(uTex2Sampler, tex1 + uvOffset);
	float4 result = (color1 * uColor1 + color2 * uColor2) * input.color * uColorIntensity;
	result.a = color1.a * color2.a * uColor1.a * uColor2.a;
	return result;
}
